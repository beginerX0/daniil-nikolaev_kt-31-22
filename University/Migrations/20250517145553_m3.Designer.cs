// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using University.Models;

#nullable disable

namespace University.Migrations
{
    [DbContext(typeof(UniversityContext))]
    [Migration("20250517145553_m3")]
    partial class m3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("University.Models.Disciplini", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit")
                        .HasColumnName("deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("disciplini", (string)null);
                });

            modelBuilder.Entity("University.Models.Dolznosti", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("dolznosti", (string)null);
                });

            modelBuilder.Entity("University.Models.Kafedri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int?>("Zav")
                        .HasColumnType("int")
                        .HasColumnName("zav");

                    b.HasKey("Id");

                    b.HasIndex("Zav");

                    b.ToTable("kafedri", (string)null);
                });

            modelBuilder.Entity("University.Models.PrepDisciplini", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DiscId")
                        .HasColumnType("int")
                        .HasColumnName("disc_id");

                    b.Property<int?>("PrepId")
                        .HasColumnType("int")
                        .HasColumnName("prep_id");

                    b.HasKey("Id");

                    b.HasIndex("DiscId");

                    b.HasIndex("PrepId");

                    b.ToTable("prepDisciplini", (string)null);
                });

            modelBuilder.Entity("University.Models.Prepodavateli", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Dolznost")
                        .HasColumnType("int")
                        .HasColumnName("dolznost");

                    b.Property<int>("Kafedra")
                        .HasColumnType("int")
                        .HasColumnName("kafedra");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("lastname");

                    b.Property<int>("Nagruzka")
                        .HasColumnType("int")
                        .HasColumnName("nagruzka");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int?>("Stepen")
                        .HasColumnType("int")
                        .HasColumnName("stepen");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("surname");

                    b.HasKey("Id");

                    b.HasIndex("Dolznost");

                    b.HasIndex("Kafedra");

                    b.HasIndex("Stepen");

                    b.ToTable("prepodavateli", (string)null);
                });

            modelBuilder.Entity("University.Models.Stepeni", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("stepeni", (string)null);
                });

            modelBuilder.Entity("University.Models.Kafedri", b =>
                {
                    b.HasOne("University.Models.Prepodavateli", "ZavNavigation")
                        .WithMany("Kafedris")
                        .HasForeignKey("Zav")
                        .HasConstraintName("kafedriToPrepodavateli");

                    b.Navigation("ZavNavigation");
                });

            modelBuilder.Entity("University.Models.PrepDisciplini", b =>
                {
                    b.HasOne("University.Models.Disciplini", "Disc")
                        .WithMany()
                        .HasForeignKey("DiscId")
                        .HasConstraintName("FK__prepDisci__disc___44FF419A");

                    b.HasOne("University.Models.Prepodavateli", "Prep")
                        .WithMany()
                        .HasForeignKey("PrepId")
                        .HasConstraintName("FK__prepDisci__prep___440B1D61");

                    b.Navigation("Disc");

                    b.Navigation("Prep");
                });

            modelBuilder.Entity("University.Models.Prepodavateli", b =>
                {
                    b.HasOne("University.Models.Dolznosti", "DolznostNavigation")
                        .WithMany("Prepodavatelis")
                        .HasForeignKey("Dolznost")
                        .HasConstraintName("FK__prepodava__dolzn__403A8C7D");

                    b.HasOne("University.Models.Kafedri", "KafedraNavigation")
                        .WithMany("Prepodavatelis")
                        .HasForeignKey("Kafedra")
                        .IsRequired()
                        .HasConstraintName("FK__prepodava__kafed__412EB0B6");

                    b.HasOne("University.Models.Stepeni", "StepenNavigation")
                        .WithMany("Prepodavatelis")
                        .HasForeignKey("Stepen")
                        .HasConstraintName("FK__prepodava__stepe__3F466844");

                    b.Navigation("DolznostNavigation");

                    b.Navigation("KafedraNavigation");

                    b.Navigation("StepenNavigation");
                });

            modelBuilder.Entity("University.Models.Dolznosti", b =>
                {
                    b.Navigation("Prepodavatelis");
                });

            modelBuilder.Entity("University.Models.Kafedri", b =>
                {
                    b.Navigation("Prepodavatelis");
                });

            modelBuilder.Entity("University.Models.Prepodavateli", b =>
                {
                    b.Navigation("Kafedris");
                });

            modelBuilder.Entity("University.Models.Stepeni", b =>
                {
                    b.Navigation("Prepodavatelis");
                });
#pragma warning restore 612, 618
        }
    }
}
