// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace University.Models
{
    public partial class UniversityContext : DbContext
    {
        public UniversityContext(){}
        public UniversityContext(DbContextOptions<UniversityContext> options)
            : base(options){}

        public virtual DbSet<Disciplini> Disciplinis { get; set; }
        public virtual DbSet<Dolznosti> Dolznostis { get; set; }
        public virtual DbSet<Kafedri> Kafedris { get; set; }
        public virtual DbSet<PrepDisciplini> PrepDisciplinis { get; set; }
        public virtual DbSet<Prepodavateli> Prepodavatelis { get; set; }
        public virtual DbSet<Stepeni> Stepenis { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
                optionsBuilder.UseSqlServer("Data Source=DESKTOP-Q2FN2DK;Initial Catalog=University1;Integrated Security=True;Encrypt=False");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Disciplini>(entity =>
            {
                entity.ToTable("disciplini");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Deleted).HasColumnName("deleted");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasColumnType("text")
                    .HasColumnName("name");
            });

            modelBuilder.Entity<Dolznosti>(entity =>
            {
                entity.ToTable("dolznosti");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasColumnType("text")
                    .HasColumnName("name");
            });

            modelBuilder.Entity<Kafedri>(entity =>
            {
                entity.ToTable("kafedri");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasColumnType("text")
                    .HasColumnName("name");

                entity.Property(e => e.Zav).HasColumnName("zav");

                entity.HasOne(d => d.ZavNavigation)
                    .WithMany(p => p.Kafedris)
                    .HasForeignKey(d => d.Zav)
                    .HasConstraintName("kafedriToPrepodavateli");
            });

            modelBuilder.Entity<PrepDisciplini>(entity =>
            {
                //entity.HasNoKey();

                entity.ToTable("prepDisciplini");

                entity.Property(e => e.Id).HasColumnName("id");//

                entity.Property(e => e.DiscId).HasColumnName("disc_id");

                entity.Property(e => e.PrepId).HasColumnName("prep_id");

                entity.HasOne(d => d.Disc)
                    .WithMany()
                    .HasForeignKey(d => d.DiscId)
                    .HasConstraintName("FK__prepDisci__disc___44FF419A");

                entity.HasOne(d => d.Prep)
                    .WithMany()
                    .HasForeignKey(d => d.PrepId)
                    .HasConstraintName("FK__prepDisci__prep___440B1D61");
            });

            modelBuilder.Entity<Prepodavateli>(entity =>
            {
                entity.ToTable("prepodavateli");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Dolznost).HasColumnName("dolznost");

                entity.Property(e => e.Kafedra).HasColumnName("kafedra");

                entity.Property(e => e.Lastname)
                    .IsRequired()
                    .HasColumnType("text")
                    .HasColumnName("lastname");

                entity.Property(e => e.Nagruzka).HasColumnName("nagruzka");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasColumnType("text")
                    .HasColumnName("name");

                entity.Property(e => e.Stepen).HasColumnName("stepen");

                entity.Property(e => e.Surname)
                    .IsRequired()
                    .HasColumnType("text")
                    .HasColumnName("surname");

                entity.HasOne(d => d.DolznostNavigation)
                    .WithMany(p => p.Prepodavatelis)
                    .HasForeignKey(d => d.Dolznost)
                    .HasConstraintName("FK__prepodava__dolzn__403A8C7D");

                entity.HasOne(d => d.KafedraNavigation)
                    .WithMany(p => p.Prepodavatelis)
                    .HasForeignKey(d => d.Kafedra)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__prepodava__kafed__412EB0B6");

                entity.HasOne(d => d.StepenNavigation)
                    .WithMany(p => p.Prepodavatelis)
                    .HasForeignKey(d => d.Stepen)
                    .HasConstraintName("FK__prepodava__stepe__3F466844");
            });

            modelBuilder.Entity<Stepeni>(entity =>
            {
                entity.ToTable("stepeni");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasColumnType("text")
                    .HasColumnName("name");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}